version: '3.7'

volumes:
  node_modules:
<% if (hasCypress) { _%>
  cypress_binary:
<% } _%>

services:
  app:
    build:
      context: .
      target: dev
    environment:
      - NODE_ENV=dev
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./:/home/node/app/
      - /home/node/.npm
      - node_modules:/home/node/app/node_modules
<% if (hasCypress) { _%>
      - cypress_binary:/root/.cache/Cypress

  test_e2e:
    image: cypress/base:10
    working_dir: /app
    environment:
      CYPRESS_baseUrl: http://app:8080/
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - cypress_binary:/root/.cache/Cypress
    command: "node_modules/cypress/bin/cypress run"
    depends_on:
      - app
<% } _%>
<% if (hasNightwatch) { _%>

  test_e2e:
    build:
      context: .
      target: dev
    environment:
      - LAUNCH_URL=http://app:8080
      - SELENIUM_HOST=selenium-chrome
      - SELENIUM_PORT=4444
    # Todo: Maybe improve this by adding a script to wait for app and selinium
<% if (usesYarn) { _%>
    command: "sh -c 'sleep 5 && yarn test:e2e -- --url http://app:8080'"
<% } else { _%>
    command: "sh -c 'sleep 5 && npm run test:e2e -- --url http://app:8080'"
<% } _%>
    volumes:
      - ./:/home/node/app
      - /home/node/.npm
      - node_modules:/home/node/app/node_modules
    depends_on:
      - app
      - selenium-chrome

  selenium-chrome: #Docs: https://github.com/SeleniumHQ/docker-selenium/tree/master/StandaloneChrome
    image: selenium/standalone-chrome
    expose:
      - 4444
    # ports:
    # - '5900:5900' # expose debug port if needed
<% } _%>
